#!/bin/bash

export TERMINAL="${TERMINAL:-kitty}"
export FILE="${FILE:-ranger}"
export BROWSER="${BROWSER-firefox}"
export EDITOR="${EDITOR-nvim}"

export IM="${IM:-fcitx}" # or fcitx support is blocked by https://groups.google.com/g/linux.debian.bugs.dist/c/cLsh_u-YMLU

# xim -> X Input Method
export GTK_IM_MODULE=${IM/ibus/xim} # makes ibus work with chromium/chrome (ibus fails, uses ibus xim emulation), and keeps fcitx correct
export XMODIFIERS=@im=$IM
export QT_IM_MODULE=$IM # makes ibus work with qutebrowser (xim fails)
# kitty specific, only ibus is supported https://github.com/kovidgoyal/kitty/blob/6179cfc6703af1b0682fdd14829280b8a228c167/glfw/ibus_glfw.c#L286
export GLFW_IM_MODULE=ibus 

if [[ -z "$DBUS_SESSION_BUS_ADDRESS" ]]; then
  export $(dbus-launch --exit-with-x11)
fi

# set SOFTWARE_VSYNC via .pam_environment, etc as needed
PICOM_VSYNC=""
[[ -n $SOFTWARE_VSYNC ]] && PICOM_VSYNC=--vsync

FCITX=$([[ -x "$(command -v fcitx5)" ]] && echo fcitx5 || echo fcitx)
GEOCLUE2=$(
  # libexec is used in slackware, lib is in arch
  [[ -x /usr/libexec/geoclue-2.0/demos/agent ]] \
    && echo /usr/libexec/geoclue-2.0/demos/agent \
    || echo /usr/lib/geoclue-2.0/demos/agent
)

sxhkd &
blueman-applet &
dunst &
xscreensaver -no-splash &
udiskie --tray &
$GEOCLUE2 & # required for redshift
redshift-gtk &
[[ "$IM" == "ibus" ]] && ibus-daemon -d -r --xim
[[ "$IM" == "fcitx" ]] && $FCITX -d -r
picom -b $PICOM_VSYNC

# If autorandr-launcher is installed (presumably because udev was not) then daemonize
command -v autorandr-launcher && autorandr-launcher --daemonize

if [[ -e "/etc/slackware-version" ]]; then
  sun start && sun start --gtk
fi

# bashism
# a monitor may be connected but not have a resolution
# match the resultion format with grep to ensure we check a monitor that is being used
if [[ "$(xrandr | grep " connected" | grep -E '[0-9]{1,4}x([0-9]{1,4})' | head -n 1)" =~ [0-9]{1,4}x([0-9]{1,4})\+[0-9]{1,4}\+[0-9]{1,4} && "${BASH_REMATCH[1]}" -gt "1080" ]];
then
  xrdb -merge $HOME/.Xresources.hidpi
fi

[ -x $HOME/.screenlayout/default.sh ] && $HOME/.screenlayout/default.sh

if [[ -d ~/.wallpaper ]]; then
  feh --bg-fill --randomize ~/.wallpaper/*
fi

# Supports having different videos per screen, for example, backgroud.DP-4.mkv
BACKGROUND_VIDEO_STEM=~/.config/background

while IFS=' ' read -r screen geometry;
do
  video="$BACKGROUND_VIDEO_STEM.$screen.mkv"
  [[ -e "$video" ]] && xwinwrap -ni -s -b -ov -g $geometry -d -- mpv "$video" --no-audio --loop inf -wid WID --no-stop-screensaver;
done < <(xrandr | sed "s/primary //" | grep -e '[0-9]\{4\}x[0-9]\{4\}' | grep ' connected' | cut -f 1,3 -d ' ' | sort -u) # requries bash over sh
# normalizes primary screens, which appear in the third column, and filters out invalid dimensions and positions
