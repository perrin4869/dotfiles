#!/bin/sh
############################
# install
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles
############################

########## Variables

DIR=$( cd "$(dirname "$0")" ; pwd -P )
LOCAL_SHARE_DIR=~/.local/share
LOCAL_BIN_DIR=~/.local/bin
LOCAL_CONFIG_DIR=~/.config

# change to the dotfiles directory
echo -n "Changing to the $DIR directory ..."
cd $DIR

for f in $DIR/home/*; do
  b=$(basename $f)
  echo "Installing .$b"
  ln -sf ~/dotfiles/home/$b ~/.$b
done

# move executable files to bin
echo "Moving executable files into $LOCAL_BIN_DIR directory"
mkdir -p $LOCAL_BIN_DIR
ln -sf $DIR/bin/* $LOCAL_BIN_DIR

# install config files
echo "Moving config files into $LOCAL_CONFIG_DIR directory"
mkdir -p $LOCAL_CONFIG_DIR
ln -sf $DIR/config/* $LOCAL_CONFIG_DIR

mkdir -p ~/.urxvt/ext
ln -sf $DIR/urxvt/urxvt-resize-font/resize-font ~/.urxvt/ext
ln -sf $DIR/urxvt/urxvt-perls/keyboard-select ~/.urxvt/ext
ln -sf $DIR/urxvt/urxvt-perls/deprecated/url-select ~/.urxvt/ext

mkdir -p ~/.gnupg
ln -sf $DIR/gpg-agent.conf ~/.gnupg

mkdir -p ~/.anthy
ln -sf $DIR/private_words_default ~/.anthy

echo "Install powerline regardless of OS"
pip install --user --upgrade powerline-status
POWERLINE_DIR=$(pip show powerline-status | grep 'Location' | rev | cut -d' ' -f 1 | rev)
ln -s $POWERLINE_DIR/powerline/bindings/tmux/powerline.conf ~/.local/powerline.conf

echo "Initializing submodules..."
git submodule update --recursive --init
./build

# coc.nvim
mkdir -p $LOCAL_CONFIG_DIR/coc/extensions
ln -sf $DIR/coc/extensions/package.json $LOCAL_CONFIG_DIR/coc/extensions
# TODO: add an upstream native command: vim -c 'CocInstall -sync|q'
( cd $LOCAL_CONFIG_DIR/coc/extensions && npm install )

#install fonts
mkdir -p $LOCAL_SHARE_DIR/fonts
ln -sf $DIR/fonts $LOCAL_SHARE_DIR
fc-cache -f

# vimrc does rtp+=~/.fzf https://github.com/junegunn/fzf/blob/master/README-VIM.md
# therefore it has to be installed in the home directory
FZF_DIR=$DIR/home/fzf
# install fzf
# Officially:
# $DIR/fzf/install --all
# Manually
$FZF_DIR/install --no-update-rc --no-completion --no-keybindings # download executable
# zsh bindings
mkdir -p ~/.oh-my-zsh/custom/plugins/fzf
ln -sf $FZF_DIR/shell/completion.zsh ~/.oh-my-zsh/custom/plugins/fzf
ln -sf $FZF_DIR/shell/key-bindings.zsh ~/.oh-my-zsh/custom/plugins/fzf

# Additional oh-my-zsh plugins
ln -sf $DIR/sandboxd ~/.oh-my-zsh/custom/plugins
ln -sf $DIR/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins
ln -sf $DIR/powerlevel10k ~/.oh-my-zsh/custom/themes

# sbt configuration
SBT_CONFIG_DIR=~/.sbt/1.0
mkdir -p $SBT_CONFIG_DIR
ln -sf $DIR/sbt/global.sbt $SBT_CONFIG_DIR

# TODO: ln -sf /bin/dash bin/sh
ln -sf /bin/dash $LOCAL_BIN_DIR

# install xwinwrap
( cd xwinwrap && make )

# install mpv-mpris
( cd mpv-mpris && make )

# install ccls
( cd ccls && \
  cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release && \
  cmake --build Release )

# dconf dump /destop/ibus > ibus.dconf
dconf load /desktop/ibus/ < $DIR/ibus.dconf
# dconf dump /org/freedesktop/ibus/ > ibus-engine.dconf
dconf load /org/freedesktop/ibus/ < $DIR/ibus-engine.dconf # anthy should input hiragana by default
